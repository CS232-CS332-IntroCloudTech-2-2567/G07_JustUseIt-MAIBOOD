import React from 'react';
import '../section/style/Allfood.css'
import { useQuery } from '@tanstack/react-query'
import { useState } from 'react';

import cancel from '../assets/X.svg'

import FoodWrapper from '../coponents/FoodWrapper'


// Get Community Food Function
const baseURL = import.meta.env.VITE_BASE_URL
async function fetchCommunityFood(user) {
    try {
        const url = `${baseURL}/get-food${user ? `?zip_code=${user.zip_code}` : ''}`;
        const response = await fetch(url, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            },
            credentials: 'include'
        });

        if (!response.ok) {
            const errorData = await response.json().catch(() => ({}));
            throw new Error(errorData.message || `Network response was not ok (${response.status})`);
        }

        return await response.json();
    }
    catch (error) {
        console.error("Error in fetchCommunityFood:", error);
        return [];
    }
}



// Main Component
function CommunityFood() {
    const [searchText, setSearchText] = useState('');

    const { data, isLoading, error, isError } = useQuery({
        queryKey: ['communityFood'],
        queryFn: () => fetchCommunityFood()
    })

    if (isLoading) {
        return (
            <div className='fridge min-h-screen bg-white-bg w-full flex flex-col items-center justify-center py-[2.5rem] px-[2rem] gap-[3.25rem]'>
                <div role="status">
                    <svg aria-hidden="true" className="w-8 h-8 text-gray-200 animate-spin fill-blue-600" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor" />
                        <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill" />
                    </svg>
                    <span className="sr-only">Loading...</span>
                </div>
            </div>
        );
    }

    if (isError) {
        return (
            <div className='fridge min-h-screen bg-white-bg w-full flex flex-col items-center justify-center py-[2.5rem] px-[2rem] gap-[3.25rem]'>
                <p className="text-red-500">Error: {error.message}</p>
            </div>
        );
    }


    const filterData = (data) => {
        return data.filter((item) => {
            return item.material.toLowerCase().includes(searchText.toLowerCase());
        });
    }

    return (
        <div className="allfood-wrapper min-h-screen bg-white-bg w-full flex flex-col items-center gap-[1rem] pt-[3rem] pb-[8rem] ">
            <div className="allfood-top py-[3rem]">
                <svg width="147" height="91" viewBox="0 0 147 91" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M28.6404 109.153C27.2563 108.186 25.4034 107.032 23.1189 105.879C13.2219 100.908 3.86807 96.22 3.75645 85.0728C3.74901 85.0058 3.74902 84.9314 3.74902 84.857V43.9294C3.74902 38.6014 8.09479 35.9076 11.8155 35.2156C19.815 33.7273 25.3216 31.3089 28.4023 29.6569L28.4246 37.7233L28.4469 44.4206H24.7411C18.9964 44.4206 14.3307 49.6519 14.3307 56.0812V79.8415C14.3307 86.2709 18.9964 91.5022 24.7411 91.5022H28.5883L28.6404 109.153Z" fill="#FFF8BB" />
                    <path d="M28.6403 109.153C27.2562 108.186 25.4033 107.032 23.1188 105.879C13.2218 100.908 3.86797 96.22 3.75635 85.0728C6.39804 86.0104 10.1336 86.4941 10.1336 81.6796C10.1336 74.2382 10.8778 50.4258 10.8778 50.4258C10.8778 50.4258 13.1102 42.9844 18.3191 41.4961C21.4147 40.6106 25.567 38.9363 28.4245 37.7233L28.4468 44.4206H24.741C18.9963 44.4206 14.3306 49.6519 14.3306 56.0812V79.8415C14.3306 86.2709 18.9963 91.5022 24.741 91.5022H28.5882L28.6403 109.153Z" fill="#EFDF7F" />
                    <path d="M28.1106 37.0796C26.4825 38.3655 24.3922 38.7554 22.1799 39.1692C20.5852 39.4668 18.9362 39.7757 17.3861 40.4446C13.117 42.2901 10.0713 47.0064 9.98047 51.9468C10.0006 55.7806 10.0125 59.755 10.0236 63.7287C10.0258 64.3895 10.5051 64.9238 11.0952 64.9238H11.0989C11.6905 64.9216 12.1682 64.3828 12.166 63.7205C12.1548 59.7446 12.1437 55.7687 12.1236 51.9639C12.1958 48.0028 14.6775 44.1862 18.1571 42.683C19.504 42.1018 20.9743 41.8258 22.5326 41.5348C24.884 41.095 27.3166 40.6411 29.3452 39.0404C29.8288 38.6594 29.9449 37.9108 29.6041 37.3691C29.2626 36.8281 28.5951 36.6972 28.1106 37.0796Z" fill="#E5AE00" />
                    <path d="M47.5958 68.3766C47.5817 69.5255 46.7452 70.446 45.7221 70.446H45.6953C44.6602 70.4297 43.8327 69.4772 43.8468 68.3178C43.8476 68.2784 43.8699 66.5244 43.9064 63.8098L38.9526 67.6965L38.1787 86.2099H53.2646L52.4907 67.6965L47.6546 63.9021C47.633 65.4648 47.6137 66.9702 47.5958 68.3766Z" fill="#90C65D" />
                    <path d="M135.536 20.3179C135.536 20.9058 134.204 22.6248 129.106 24.4926C127.373 25.1251 125.215 25.7725 122.521 26.3975C113.279 28.5407 100.978 29.7238 87.8664 29.7238C75.603 29.7238 64.0465 28.6895 55.0424 26.7994C55.0127 26.6803 54.9829 26.5538 54.9383 26.4422C54.4471 25.1548 53.4798 24.2247 52.1998 23.8154C52.1775 23.8079 52.1552 23.8005 52.1329 23.7931C50.6297 23.3243 48.9256 23.6591 47.6829 24.6563C47.6308 24.7009 47.5787 24.7604 47.5266 24.8051C41.6852 22.8257 40.1895 20.943 40.1895 20.3179C40.1895 19.5217 42.5856 16.7014 53.2119 14.2309C62.4466 12.0878 74.7547 10.912 87.8664 10.912C100.978 10.912 113.279 12.0878 122.521 14.2309C133.147 16.7014 135.536 19.5217 135.536 20.3179Z" fill="#EFDF7F" />
                    <path d="M129.106 24.4926C127.372 25.1251 125.215 25.7725 122.521 26.3975C113.279 28.5407 100.978 29.7238 87.8662 29.7238C75.6028 29.7238 64.0463 28.6895 55.0423 26.7994C55.0125 26.6803 54.9828 26.5538 54.9381 26.4422C54.447 25.1548 53.4796 24.2247 52.1997 23.8154C60.4448 21.9699 72.2989 20.3031 87.5239 20.6602C105.353 21.077 118.979 22.3792 129.106 24.4926Z" fill="#EA6D4B" />
                    <path d="M132.718 26.0709C132.91 25.4443 132.612 24.7619 132.052 24.5461C123.349 21.1953 106.415 19.1139 87.8618 19.1139C69.3186 19.1139 52.385 21.1953 43.6712 24.5461C43.1116 24.7612 42.814 25.4443 43.0052 26.0701C43.1577 26.568 43.5737 26.8805 44.0187 26.8805C44.1341 26.8805 44.2516 26.8597 44.367 26.815C52.8717 23.5438 69.5389 21.513 87.8618 21.513C106.195 21.513 122.861 23.5438 131.356 26.815C131.916 27.0308 132.525 26.6967 132.718 26.0709Z" fill="#C1401E" />
                    <path d="M127.119 9.03681C116.538 5.91887 102.6 4.19991 87.8662 4.19991C73.1248 4.19991 59.1871 5.91887 48.6129 9.03681C41.2459 11.2097 33.1944 14.9825 32.48 19.1124L32.5246 46.519V46.5265L32.6288 110.932C32.6437 120.04 37.8526 127.943 45.5842 130.614C49.7142 132.043 54.5511 133.226 59.8568 134.149C68.3028 135.622 77.9394 136.418 87.8662 136.418C104.036 136.418 119.447 134.298 130.148 130.614C137.88 127.943 143.081 120.04 143.096 110.932L143.252 19.1348V19.1124C142.538 14.9825 134.479 11.2097 127.119 9.03681ZM139.286 20.3179C139.286 24.6711 134.047 28.0049 123.28 30.5052C113.799 32.7078 101.223 33.9208 87.8662 33.9208C77.0241 33.9208 60.2884 32.8641 48.8733 29.5973C48.6501 30.1852 48.4715 30.8921 48.3524 31.733C48.3375 31.8 48.3301 31.867 48.3078 31.9339C48.1366 33.7347 47.8985 46.9357 47.7274 58.8345L55.3994 64.8471C55.8682 65.2267 56.1659 65.822 56.1957 66.4694L57.1035 88.2131C57.1258 88.7861 56.9398 89.3442 56.5826 89.7534C56.2328 90.1702 55.7417 90.4083 55.2282 90.4083H36.2155C35.7021 90.4083 35.2109 90.1702 34.8537 89.7534C34.504 89.3442 34.318 88.7861 34.3403 88.2131L35.2482 66.4694C35.2779 65.822 35.5681 65.2267 36.0444 64.8471L43.9769 58.6262C44.0215 55.9249 44.0662 52.9112 44.1183 49.8974C44.2076 44.5471 44.2894 40.2683 44.3713 37.1875C44.4159 35.3495 44.4606 33.9208 44.4978 32.9385C44.535 32.1646 44.5573 31.547 44.6541 31.0484H44.6466C44.7954 30.0736 45.0038 29.2029 45.2643 28.4216C39.9362 26.4273 36.4388 23.7856 36.4388 20.3179C36.4388 15.9573 41.6775 12.6236 52.4452 10.1233C61.9255 7.9206 74.5089 6.70766 87.8662 6.70766C102.95 6.70766 129.426 8.75404 137.128 15.9424C138.512 17.2223 139.286 18.6808 139.286 20.3179Z" fill="#FFF8BB" />
                    <path d="M145.255 17.101C144.996 16.5065 144.355 16.2594 143.822 16.5519C143.291 16.8436 143.071 17.5617 143.332 18.1562C144.208 20.1587 143.85 22.877 142.421 25.0827C140.927 27.3865 138.592 28.8718 136.725 29.9084C127.34 35.1218 116.213 36.2246 106.395 37.198C105.806 37.2567 105.37 37.8394 105.423 38.4987C105.472 39.123 105.94 39.5926 106.489 39.5926C106.52 39.5926 106.552 39.5911 106.585 39.5874C116.591 38.5955 127.931 37.4711 137.676 32.0582C139.764 30.8988 142.386 29.2193 144.155 26.492C146.045 23.5765 146.477 19.8908 145.255 17.101Z" fill="#E5AE00" />
                    <path d="M87.8642 6.70989C74.5055 6.70989 61.9273 7.92209 52.4485 10.124C41.6778 12.625 36.4421 15.958 36.4421 20.315C36.4421 23.7819 39.9358 26.4258 45.2638 28.4186C45.0019 29.2052 44.7943 30.0751 44.6499 31.0514H44.6507C44.5599 31.5477 44.5339 32.1624 44.5011 32.9355C44.4602 33.9193 44.4148 35.3495 44.3686 37.1868C44.2905 40.2668 44.2057 44.5448 44.1164 49.9011C44.065 52.9104 44.0196 55.9279 43.9794 58.6262L36.0469 64.8501C35.5714 65.2237 35.2775 65.822 35.2507 66.4709L34.3414 88.2101C34.3176 88.7838 34.5043 89.3427 34.8571 89.7572C35.2113 90.1731 35.7016 90.4075 36.2144 90.4075H55.2293C55.7421 90.4075 56.2324 90.1731 56.5851 89.7572C56.9393 89.3427 57.1261 88.7838 57.1023 88.2101L56.193 66.4709C56.1655 65.822 55.8715 65.2237 55.3968 64.8501L47.7255 58.8315C47.9003 46.9343 48.1399 33.7318 48.3111 31.9332C48.3275 31.8677 48.3394 31.8022 48.3498 31.7353C48.4733 30.8944 48.6511 30.1852 48.8759 29.5996C60.2887 32.8626 77.0214 33.9193 87.8642 33.9193C101.223 33.9193 113.8 32.7071 123.28 30.5059C134.051 28.0049 139.286 24.6712 139.286 20.315C139.286 9.55325 105.65 6.70989 87.8642 6.70989ZM52.4909 67.6965L53.2648 86.2099H38.1789L38.9528 67.6965L43.9065 63.8098C43.8701 66.5244 43.8477 68.2784 43.847 68.3178C43.8329 69.4772 44.6603 70.4297 45.6954 70.4461H45.7222C46.7454 70.4461 47.5818 69.5256 47.596 68.3766C47.6138 66.9702 47.6332 65.4648 47.6547 63.9021L52.4909 67.6965ZM122.519 26.3953C113.282 28.5407 100.974 29.7216 87.8642 29.7216C75.6008 29.7216 64.0429 28.688 55.0403 26.7986C55.015 26.6773 54.9838 26.5568 54.9391 26.4385C54.4383 25.1355 53.4412 24.1942 52.1315 23.7893C50.6268 23.3243 48.9242 23.6569 47.6845 24.6592C47.6272 24.7046 47.5781 24.7582 47.523 24.8058C41.6823 22.8264 40.1918 20.94 40.1918 20.315C40.1918 19.5217 42.5834 16.7022 53.209 14.2346C62.446 12.0893 74.754 10.9083 87.8642 10.9083C100.974 10.9083 113.282 12.0893 122.519 14.2346C133.145 16.7022 135.537 19.5217 135.537 20.315C135.537 21.1082 133.145 23.9278 122.519 26.3953Z" fill="#420606" />
                    <path d="M128.074 4.97754C117.194 1.76733 102.914 0 87.8641 0C72.8146 0 58.5346 1.76733 47.6553 4.97754C39.5435 7.37069 29.6777 11.6815 28.749 18.6273C28.7349 18.7314 28.729 18.8364 28.729 18.942L28.7379 24.7165C27.0866 25.7859 21.2139 29.2082 11.197 31.0722C4.50054 32.3186 0 37.4837 0 43.9257V84.857C0 98.8818 10.9716 104.387 21.606 109.722C25.896 111.874 28.4722 114.047 29.1323 114.634C30.3765 123.99 36.2328 131.781 44.4786 134.623C55.5231 138.43 71.3368 140.614 87.8641 140.614C104.391 140.614 120.204 138.43 131.25 134.623C140.56 131.414 146.829 121.897 146.847 110.941L147 18.942C147 18.8364 146.993 18.7314 146.979 18.6273C146.051 11.6815 136.185 7.37069 128.074 4.97754ZM28.5779 87.3008H24.7411C21.0673 87.3008 18.0781 83.9536 18.0781 79.84V56.0805C18.0781 51.9669 21.0673 48.6197 24.7411 48.6197H28.4581L28.5779 87.3008ZM23.1166 105.88C13.1571 100.882 3.74971 96.162 3.74971 84.857V43.9257C3.74971 38.6022 8.09252 35.9054 11.8125 35.2133C19.8119 33.7251 25.3253 31.3081 28.4 29.6569L28.4462 44.4213H24.7411C18.9993 44.4213 14.3284 49.6511 14.3284 56.0805V79.84C14.3284 86.2686 18.9993 91.4985 24.7411 91.4985H28.5905L28.6441 109.152C27.2541 108.184 25.4071 107.029 23.1166 105.88ZM143.098 110.933C143.082 120.038 137.877 127.946 130.146 130.611C119.445 134.3 104.033 136.415 87.8641 136.415C71.6962 136.415 56.2844 134.3 45.5822 130.611C37.8506 127.946 32.6461 120.038 32.6312 110.933L32.524 46.5257V46.5205V46.5161L32.4787 19.1124C33.1938 14.9847 41.2491 11.2082 48.6101 9.03607C59.1872 5.9159 73.1279 4.19768 87.8641 4.19768C102.6 4.19768 116.541 5.9159 127.117 9.03607C134.479 11.2082 142.535 14.9847 143.25 19.1124L143.098 110.933Z" fill="#420606" />
                    <path d="M130.328 10.1255C130.271 10.0875 130.211 10.0518 130.153 10.0139C129.143 9.6604 128.125 9.33298 127.119 9.03607C116.538 5.91813 102.6 4.19917 87.8662 4.19917C73.1248 4.19917 59.1871 5.91813 48.6129 9.03607C41.2459 11.209 33.1944 14.9817 32.48 19.1117L32.5246 46.5183V46.5257L32.6288 110.931C32.6437 120.039 37.8526 127.942 45.5842 130.613C49.7142 132.042 54.5511 133.225 59.8568 134.148C47.5488 125.264 45.8521 114.422 45.8521 114.422L45.8149 90.4083H36.2155C35.7021 90.4083 35.2109 90.1702 34.8537 89.7535C34.504 89.3442 34.318 88.7861 34.3403 88.2131L35.2482 66.4694C35.2779 65.822 35.5681 65.2267 36.0444 64.8472L43.9769 58.6262C44.0215 55.9249 44.0662 52.9112 44.1183 49.8974C44.2076 44.5471 44.2894 40.2683 44.3713 37.1875C44.4159 35.3495 44.4606 33.9208 44.4978 32.9385C44.535 32.1646 44.5573 31.547 44.6541 31.0484H44.6466C44.7954 30.0736 45.0038 29.2029 45.2643 28.4216C39.9362 26.4273 36.4388 23.7856 36.4388 20.3179C36.4388 15.9573 41.6775 12.6236 52.4452 10.1233C61.9255 7.92061 74.5089 6.70766 87.8662 6.70766C102.95 6.70766 129.426 8.75404 137.128 15.9424C137.153 15.9521 137.176 15.9618 137.201 15.9714C135.164 13.7472 132.825 11.7842 130.328 10.1255Z" fill="#EFDF7F" />
                    <path d="M134.868 50.9385C133.887 48.7135 130.948 49.5201 130.149 51.3582C128.509 55.1287 128.72 60.2261 128.864 64.2719C129.011 68.3781 135.95 69.0359 136.262 64.7623C136.586 60.3235 136.683 55.055 134.868 50.9385Z" fill="#FEFFFA" />
                    <path d="M136.943 92.381C136.937 88.7913 137.016 85.1666 136.862 81.5806C136.71 78.0742 136.788 74.1146 133.729 71.851C133.165 71.4335 132.463 71.6054 131.944 71.973C129.826 73.471 129.492 75.7599 129.23 78.1888C128.777 82.3716 128.898 86.6444 128.887 90.8466C128.872 96.8659 127.46 105.321 130.653 110.675C131.618 112.293 134.104 112.514 135.114 110.784C138.155 105.581 136.952 98.186 136.943 92.381Z" fill="#FEFFFA" />
                    <path d="M107.042 66.2201C107.042 62.425 110.612 59.3487 115.015 59.3487C119.417 59.3487 122.987 62.425 122.987 66.2201C122.987 70.0152 119.417 73.0915 115.015 73.0915C110.612 73.0915 107.042 70.0152 107.042 66.2201Z" fill="#F98291" />
                    <path d="M63.7603 66.2201C63.7603 62.425 67.3299 59.3487 71.7322 59.3487C76.1353 59.3487 79.7049 62.425 79.7049 66.2201C79.7049 70.0152 76.1353 73.0915 71.7322 73.0915C67.3299 73.0915 63.7603 70.0152 63.7603 66.2201Z" fill="#F98291" />
                    <path d="M76.3053 58.2608C74.0268 58.2608 71.8911 56.5649 71.397 54.3332C71.243 53.6389 71.682 52.9506 72.377 52.7966C73.0728 52.6425 73.7604 53.0816 73.9137 53.7766C74.1503 54.8497 75.2747 55.7121 76.3775 55.6823C77.4751 55.6422 78.5377 54.6904 78.697 53.6032C78.8012 52.8985 79.4568 52.4133 80.1592 52.5146C80.8639 52.618 81.3506 53.2728 81.2479 53.9768C80.9086 56.2925 78.8093 58.173 76.4713 58.2578C76.4154 58.26 76.3604 58.2608 76.3053 58.2608Z" fill="#420606" />
                    <path d="M109.979 58.2608C107.701 58.2608 105.565 56.5649 105.071 54.3332C104.917 53.6389 105.356 52.9506 106.051 52.7966C106.747 52.6425 107.434 53.0816 107.587 53.7766C107.824 54.8497 108.946 55.7121 110.052 55.6823C111.15 55.6422 112.212 54.6904 112.371 53.6032C112.475 52.8985 113.127 52.4133 113.834 52.5146C114.538 52.618 115.024 53.2721 114.922 53.9768C114.582 56.2925 112.484 58.173 110.145 58.2578C110.089 58.26 110.034 58.2608 109.979 58.2608Z" fill="#420606" />
                    <path d="M93.3291 61.7322C90.9412 61.7322 88.5934 60.9285 86.7063 59.4626C86.1437 59.0258 86.0418 58.2161 86.4786 57.6543C86.9154 57.0917 87.7243 56.9898 88.2869 57.4266C89.7446 58.5592 91.5462 59.1694 93.4102 59.1545C95.1783 59.1366 96.9166 58.5145 98.2189 57.44C98.4488 57.1498 98.8015 56.9645 99.2049 56.9645C99.7406 56.9645 100.244 57.2956 100.433 57.7964C100.623 58.298 100.507 58.8635 100.105 59.2185C98.3022 60.8139 95.9336 61.7069 93.437 61.7322C93.4013 61.7322 93.3656 61.7322 93.3291 61.7322Z" fill="#420606" />
                </svg>

                <div className="space-cup"></div>
                <div className="allfood-toptext">
                    <h2 className='allfood-topic'>อาหารใกล้ฉัน</h2>
                    <p className='p2'>อาหารในบริเวณใกล้เคียง(รหัสไปรษณีเดียวกัน)</p>
                </div>
            </div>

            <div className="search-box">
                <input
                    type="text"
                    placeholder="ค้นหา..."
                    className="search-input"
                    value={searchText}
                    onChange={(e) => setSearchText(e.target.value)}
                />
                <img
                    src={cancel} alt='clear search text' onClick={() => setSearchText('')}
                    style={{ cursor: 'pointer' }}>
                </img>
            </div>

            <div className="allfood-container">
                {filterData(data).map((items) => (
                    <FoodWrapper
                        key={items.id}
                        id={items.id}
                        exp={items.exp}
                        price={items.price}
                        image={items.image}
                        name={items.material}
                        location={items.address}
                    />
                ))}
            </div>
        </div>
    )
}

export default CommunityFood;